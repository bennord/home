# z
if [ -f ~/z.sh ]; then
    . ~/z.sh
fi

# load nvm command script (node.js version manager)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# shortcuts
alias e="code"

# git aliases
alias git-find-repos="find . -maxdepth 4 -name .git -type d | rev | cut -c 6- | rev"
alias git-find-pull="git-find-repos | xargs -t -I {} git -C {} pull"

# vagrant
alias vaginfo="vagrant ssh -c 'tailf /var/log/gengo/kubelet/kubelet.INFO'"

# github repo browser
gh() {
    local remote="$1"
    if [ "$remote" = "" ]; then
        remote="origin"
    fi
    git remote -v | perl \
        -e "my \$remote = quotemeta \"$remote\";" \
        -e '$_ = do { local $/; <> };' \
        -e '/^(${remote})\s+git\@github\.com:(\S+)\.git\s+\(push\)/m;' \
        -e 'if (not $2) { print "No remote exists with the name \"$remote\"\n"; }' \
        -e 'if ($2) { print "Opening remote:$1 at url:https:\/\/github.com\/$2\n"; }' \
        -e 'if ($2) { `firefox "https://github.com/$2"`; }'
}

ghr() {
    firefox "https://github.com/$1"
}

ghg() {
    ghr "gengo/$1"
}
ghb() {
    ghr "bennordgengo/$1"
}
alias ghaid="ghg ai-dev-tools"
alias ghaic="ghg ai-collection"
alias ghn="ghr notifications"

# pulseaudio virtual sink/source
vac-list() {
    pacmd list-sinks | grep -E 'index:|name:|module:'
}
vac-add() {
    echo "Running \"pacmd load-module\" for $1"
    pacmd load-module module-null-sink sink_name=$1 sink_properties=device.description=$1
    vac-list
}
vac-remove() {
    pacmd list-sinks | grep -E 'index:|name:|module:' | tr '\n' ' ' | perl -n \
        -e "my \$sink_name = quotemeta \"$1\";" \
        -e '/name: \<(${sink_name})\>\s+module: (\d+)\s/;' \
        -e "if (not \$2) { print \"No sink exists with the name \'$1\'\n\"; }" \
        -e 'if ($2) { print "Running \"pacmd unload-module\" for sink:$1 module:$2\n"; }' \
        -e 'if ($2) { `pacmd unload-module $2`; }'
    vac-list
}

# minikube
alias ministart="minikube start --kubernetes-version=v1.14.0"

# ionic build/copy/installDebug
aibi() {
    cd ~/projects/ai-collection
    ionic cap sync android
    cd ~/projects/ai-collection/android
    ./gradlew installDebug
    cd ~/projects/ai-collection
}

# github action log report
gh_action_report() {
    q -H -d , "SELECT \"Repository Slug\",SUM(Quantity) AS QuantitySum FROM $1 GROUP BY \"Repository Slug\" ORDER BY QuantitySum DESC"
}

# TODO: starbucks auth
# Still not restoring the cookie correctly from file...
sbux_agree() {
    curl 'https://service.wi2.ne.jp/freewifi/starbucks/agreement.html?' \
        -c ~/starbucks_cookies.txt \
        -H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0' \
        -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' \
        -H 'Accept-Language: en-US,en;q=0.5' \
        --compressed \
        -H 'Connection: keep-alive' \
        -H 'Referer: https://service.wi2.ne.jp/freewifi/starbucks/index.html' \
        -H 'Upgrade-Insecure-Requests: 1' \
        $*
}
sbux_login() {
    curl 'https://service.wi2.ne.jp/wi2auth/xhr/login' \
        -b ~/starbucks_cookies.txt \
        -b "language=en; last_disp_lang=en; " \
        -H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0' \
        -H 'Accept: application/json, text/javascript, */*; q=0.01' \
        -H 'Accept-Language: en-US,en;q=0.5' \
        --compressed \
        -H 'Content-Type: application/json' \
        -H 'X-Requested-With: XMLHttpRequest' \
        -H 'Origin: https://service.wi2.ne.jp' \
        -H 'Connection: keep-alive' \
        -H 'Referer: https://service.wi2.ne.jp/freewifi/starbucks/agreement.html?' \
        --data-raw '{"login_method":"onetap","login_params":{"agree":"1"}}' \
        $*
}
sbux_lpurl() {
    curl 'https://service.wi2.ne.jp/wi2auth/lpurl' \
        -b ~/starbucks_cookies.txt \
        -b "language=en; last_disp_lang=en; " \
        -H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0' \
        -H 'Accept: application/json, text/javascript, */*; q=0.01' \
        -H 'Accept-Language: en-US,en;q=0.5' \
        --compressed \
        -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \
        -H 'X-Requested-With: XMLHttpRequest' \
        -H 'Origin: https://service.wi2.ne.jp' \
        -H 'Connection: keep-alive' \
        -H 'Referer: https://service.wi2.ne.jp/freewifi/starbucks/landing-static.html' \
        --data-raw '{}' \
        $*
}
